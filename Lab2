USE QuanLySinhVien;
GO


CREATE TABLE Khoa (
    MAKH CHAR(2) PRIMARY KEY,
    TENKH NVARCHAR(50)
);
GO


CREATE TABLE SinhVien (
    MASV CHAR(3) PRIMARY KEY,
    HOSV NVARCHAR(15),
    TENSV NVARCHAR(15),
    PHAI BIT,
    NGAYSINH DATETIME,
    NOISINH NVARCHAR(50),
    MAKH CHAR(2),
    HOCBONG INT,
    FOREIGN KEY (MAKH) REFERENCES Khoa(MAKH)
);
GO

CREATE TABLE MonHoc (
    MAMH CHAR(3) PRIMARY KEY,
    TENMH NVARCHAR(50),
    SOTIET INT
);
GO


CREATE TABLE KetQua (
    MASV CHAR(3),
    MAMH CHAR(3),
    DIEM REAL,
    PRIMARY KEY (MASV, MAMH),
    FOREIGN KEY (MASV) REFERENCES SinhVien(MASV),
    FOREIGN KEY (MAMH) REFERENCES MonHoc(MAMH)
);
GO

-- Thêm dữ liệu vào bảng Khoa
INSERT INTO Khoa (MAKH, TENKH) VALUES ('01', 'Khoa CNTT');
INSERT INTO Khoa (MAKH, TENKH) VALUES ('02', 'Khoa Kinh Te');
GO

-- Thêm dữ liệu vào bảng SinhVien
INSERT INTO SinhVien (MASV, HOSV, TENSV, PHAI, NGAYSINH, NOISINH, MAKH, HOCBONG)
VALUES
('001', 'Nguyen', 'An', 1, '2000-01-01', 'Ha Noi', '01', 1000000),
('002', 'Tran', 'Binh', 0, '1999-05-15', 'Hai Phong', '02', 2000000);
GO

-- Thêm dữ liệu vào bảng MonHoc
INSERT INTO MonHoc (MAMH, TENMH, SOTIET)
VALUES
('MH1', 'Toan', 30),
('MH2', 'Ly', 25);
GO

-- Thêm dữ liệu vào bảng KetQua
INSERT INTO KetQua (MASV, MAMH, DIEM)
VALUES
('001', 'MH1', 8.5),
('001', 'MH2', 7.0),
('002', 'MH1', 9.0),
('002', 'MH2', 6.5);
GO
 select * from khoa;
 select * from SinhVien;
 select * from MonHoc;
 select * from KetQua;
GO

--Cau 1 Truy vấn danh sách sinh viên cùng với tên khoa của họ: Truy vấn này sẽ sử phép JOIN giữa bảng SinhVien và bảng Khoa.
SELECT SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV, Khoa.TENKH
FROM SinhVien
JOIN Khoa ON SinhVien.MAKH = Khoa.MAKH;

--Cau 2 Truy vấn danh sách sinh viên và điểm số của họ trong từng môn học: Truy vấn này sẽ sử dụng phép JOIN giữa bảng SinhVien, bảng KetQua và bảng MonHoc.

SELECT SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV, MonHoc.TENMH,
KetQua.DIEM
FROM SinhVien
JOIN KetQua ON SinhVien.MASV = KetQua.MASV
JOIN MonHoc ON KetQua.MAMH = MonHoc.MAMH;

--Cau 3 Truy vấn danh sách sinh viên có học bổng từ 1,000,000 đồng trở lên.
SELECT MASV, HOSV, TENSV, HOCBONG
FROM SinhVien
WHERE HOCBONG >= 1000000;

--Cau 4 Truy vấn tên các môn học cùng với số lượng sinh viên đăng ký học mỗi môn: truy vấn này sẽ sử dụng GROUP BY và COUNT.
SELECT MonHoc.TENMH, COUNT(KetQua.MASV) AS SoLuongSinhVien
FROM MonHoc
JOIN KetQua ON MonHoc.MAMH = KetQua.MAMH
GROUP BY MonHoc.TENMH;

--Cau 5 Truy vấn danh sách sinh viên và điểm trung bình của họ trong các môn học: Truy vấn này sẽ sử dụng GROUP BY và AVG.
SELECT SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV, AVG(KetQua.DIEM) AS
DiemTrungBinh
FROM SinhVien
JOIN KetQua ON SinhVien.MASV = KetQua.MASV
GROUP BY SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV;

--Cau 6 Truy vấn danh sách các khoa và số lượng sinh viên trong mỗi khoa.
SELECT Khoa.TENKH, COUNT(SinhVien.MASV) AS SoLuongSinhVien
FROM Khoa
LEFT JOIN SinhVien ON Khoa.MAKH = SinhVien.MAKH
GROUP BY Khoa.TENKH;

--Cau 7 Truy vấn danh sách sinh viên và số lượng môn học mà mỗi sinh viên đã đăng ký học.
SELECT SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV, COUNT(KetQua.MAMH) AS
SoLuongMonHoc
FROM SinhVien
JOIN KetQua ON SinhVien.MASV = KetQua.MASV
GROUP BY SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV;

--Cau 8 Truy vấn danh sách sinh viên có điểm môn "Toán" lớn hơn 8.
SELECT SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV, KetQua.DIEM
FROM SinhVien
JOIN KetQua ON SinhVien.MASV = KetQua.MASV
JOIN MonHoc ON KetQua.MAMH = MonHoc.MAMH
WHERE MonHoc.TENMH = 'Toan' AND KetQua.DIEM > 8;

--Cau 9 Truy vấn danh sách sinh viên và tuổi của họ (dựa trên ngày sinh).
SELECT MASV, HOSV, TENSV, DATEDIFF(YEAR, NGAYSINH, GETDATE()) AS Tuoi
FROM SinhVien;

--Cau 10 Truy vấn danh sách sinh viên và điểm cao nhất mà mỗi sinh viên đã đạt được.
SELECT SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV, MAX(KetQua.DIEM) AS
DiemCaoNhat
FROM SinhVien
JOIN KetQua ON SinhVien.MASV = KetQua.MASV
GROUP BY SinhVien.MASV, SinhVien.HOSV, SinhVien.TENSV;

---------------------------------------------------------------------

USE QuanLyNhanVien;
GO

CREATE TABLE NHANVIEN (
MANV char (5) PRIMARY KEY,
HOTEN nvarchar (50),
NGAYSINH date,
GIOITINH bit,
DIACHI nvarchar (100),
MAPB char (5),
MACV char (5),
LUONGCB decimal,
HESOLUONG decimal);
GO

CREATE TABLE PHONGBAN (
MAPB char (5) PRIMARY KEY,
TENPB nvarchar (50)
);
GO

CREATE TABLE CHUCVU (
MACV char (5),
TENCV nvarchar (50)
);
GO

CREATE TABLE LUONG (
MANV char (5) PRIMARY KEY,
NGAY date,
LUONGTHUONG decimal,
PHUCAP decimal);
GO

--PHONGBAN
INSERT INTO PHONGBAN (MAPB, TENPB) VALUES
('PB01', 'Phòng Kế Toán'),
('PB02', 'Phòng Nhân Sự'),
('PB03', 'Phòng Kỹ Thuật');
GO

--CHUCVU
INSERT INTO CHUCVU (MACV, TENCV) VALUES
('CV01', 'Nhân Viên'),
('CV02', 'Trưởng Phòng'),
('CV03', 'Giám Đốc');
GO

--NHANVIEN
INSERT INTO NHANVIEN (MANV, HOTEN, NGAYSINH, GIOITINH, DIACHI, MAPB, MACV, LUONGCB, HESOLUONG)
VALUES
('NV01', 'Nguyen Van A', '1985-01-01', 1, 'Ha Noi', 'PB01', 'CV01', 5000000, 1.2),
('NV02', 'Tran Thi B', '1990-02-02', 0, 'Hai Phong', 'PB02', 'CV02', 7000000, 1.5),
('NV03', 'Le Van C', '1988-03-03', 1, 'Da Nang', 'PB03', 'CV03', 9000000, 2.0);
GO

--LUONG
INSERT INTO LUONG (MANV, NGAY, LUONGTHUONG, PHUCAP)
VALUES
('NV01', '2023-06-01', 500000, 200000),
('NV02', '2023-06-01', 700000, 300000),
('NV03', '2023-06-01', 900000, 400000);
GO

select * from PHONGBAN
select * from CHUCVU
select * from NHANVIEN
select * from LUONG

--1. Liệt kê tất cả các nhân viên và thông tin chi tiết của họ:
SELECT * FROM NHANVIEN;


--2. Tính tổng lương (bao gồm lương cơ bản, lương thưởng, và phụ cấp) của tất cả các nhân viên trong tháng 6 năm 2023:
SELECT SUM(NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG + LUONG.LUONGTHUONG + LUONG.PHUCAP) AS TONG_LUONG
FROM NHANVIEN, LUONG
WHERE NHANVIEN.MANV = LUONG.MANV AND MONTH(LUONG.NGAY) = 6 AND YEAR(LUONG.NGAY) = 2023;

--3. Liệt kê các nhân viên thuộc phòng ban "Phòng Kỹ Thuật":
SELECT * 
FROM NHANVIEN 
WHERE MAPB = (SELECT MAPB FROM PHONGBAN WHERE TENPB ='Phòng Kỹ Thuật');

--4 Tìm kiếm thông tin nhân viên theo mã nhân viên:
SELECT * 
FROM NHANVIEN 
WHERE MANV = 'NV01';

--5. Liệt kê các nhân viên có chức vụ "Trưởng Phòng":
SELECT * 
FROM NHANVIEN 
WHERE MACV = (SELECT MACV FROM CHUCVU WHERE TENCV ='Trưởng Phòng');

--6.Tính tổng số nhân viên trong mỗi phòng ban:
SELECT MAPB, COUNT(*) AS SO_LUONG_NV
FROM NHANVIEN
GROUP BY MAPB;

--7. Liệt kê thông tin lương của tất cả nhân viên theo từng ngày:
SELECT * 
FROM LUONG;

--8. Cập nhật địa chỉ của một nhân viên:
UPDATE NHANVIEN
SET DIACHI = 'Dia Chi Moi' 
WHERE MANV = 'NV01';

--9. Xóa thông tin của một nhân viên theo mã nhân viên:
DELETE FROM NHANVIEN
WHERE MANV = 'NV01'; 

--10. Thêm một nhân viên mới vào bảng NHANVIEN:
INSERT INTO NHANVIEN (MANV, HOTEN, NGAYSINH, GIOITINH, DIACHI, MAPB, MACV, LUONGCB, HESOLUONG)
VALUES ('NV04', 'Pham Van D', '1992-04-04', 1, 'Hue', 'PB01', 'CV01', 6000000, 1.3);

--11. Truy vấn tên các chức vụ và số lượng nhân viên trong từng chức vụ:
SELECT CHUCVU.TENCV, COUNT(NHANVIEN.MANV) AS SO_LUONG_NV
FROM CHUCVU, NHANVIEN
WHERE CHUCVU.MACV = NHANVIEN.MACV
GROUP BY CHUCVU.TENCV;

--12. Truy vấn các nhân viên và tổng lương trong tháng 6/2023, sắp xếp theo tổng lương giảm dần:
SELECT NHANVIEN.MANV, NHANVIEN.HOTEN, 
       (NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG + LUONG.LUONGTHUONG + LUONG.PHUCAP) AS TONG_LUONG
FROM NHANVIEN, LUONG
WHERE NHANVIEN.MANV = LUONG.MANV AND MONTH(LUONG.NGAY) = 6 AND YEAR(LUONG.NGAY) = 2023
ORDER BY TONG_LUONG DESC;

--13 Truy vấn danh sách nhân viên và phòng ban mà nhân viên đó thuộc về, chỉ lấy các nhân viên thuộc phòng "Phòng Kỹ Thuật":
SELECT NHANVIEN.MANV, NHANVIEN.HOTEN, PHONGBAN.TENPB
FROM NHANVIEN, PHONGBAN
WHERE NHANVIEN.MAPB = PHONGBAN.MAPB AND PHONGBAN.TENPB = 'Phòng Kỹ Thuật';


--14. Truy vấn danh sách các nhân viên, chức vụ và tổng lương, chỉ lấy các nhân viên có tổng lương trên 8 triệu:
SELECT NHANVIEN.MANV, NHANVIEN.HOTEN, CHUCVU.TENCV, 
       (NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG + LUONG.LUONGTHUONG + LUONG.PHUCAP) AS TONG_LUONG
FROM NHANVIEN, LUONG, CHUCVU
WHERE NHANVIEN.MANV = LUONG.MANV AND NHANVIEN.MACV = CHUCVU.MACV 
      AND (NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG + LUONG.LUONGTHUONG + LUONG.PHUCAP) > 8000000;


--15. Truy vấn tổng số nhân viên và lương trung bình theo phòng ban:
SELECT PHONGBAN.TENPB, COUNT(NHANVIEN.MANV) AS SO_LUONG_NV, AVG(NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG) AS LUONG_TB
FROM PHONGBAN, NHANVIEN
WHERE PHONGBAN.MAPB = NHANVIEN.MAPB
GROUP BY PHONGBAN.TENPB;


--16. Truy vấn các phòng ban có nhiều hơn 1 nhân viên:
SELECT PHONGBAN.TENPB, COUNT(NHANVIEN.MANV) AS SO_LUONG_NV
FROM PHONGBAN, NHANVIEN
WHERE PHONGBAN.MAPB = NHANVIEN.MAPB
GROUP BY PHONGBAN.TENPB
HAVING COUNT(NHANVIEN.MANV) > 1;  --- note


--17. Truy vấn tổng số nhân viên và lương trung bình theo giới tính, chỉ lấy những nhóm có lương trung bình lớn hơn 6 triệu:
SELECT NHANVIEN.GIOITINH, COUNT(*) AS SO_LUONG_NV, AVG(NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG) AS LUONG_TB
FROM NHANVIEN
GROUP BY NHANVIEN.GIOITINH
HAVING AVG(NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG) > 6000000;

--18. Truy vấn tổng lương thưởng và phụ cấp của mỗi nhân viên:
SELECT NHANVIEN.MANV, NHANVIEN.HOTEN, SUM(LUONG.LUONGTHUONG + LUONG.PHUCAP) AS TONG_LUONG_TPC
FROM NHANVIEN, LUONG
WHERE NHANVIEN.MANV = LUONG.MANV
GROUP BY NHANVIEN.MANV, NHANVIEN.HOTEN;

--19. Truy vấn tổng lương thưởng và phụ cấp theo phòng ban, chỉ lấy những phòng ban có tổng phụ cấp lớn hơn 500000:
SELECT PHONGBAN.TENPB, SUM(LUONG.PHUCAP) AS TONG_PHUCAP
FROM PHONGBAN, NHANVIEN, LUONG
WHERE PHONGBAN.MAPB = NHANVIEN.MAPB AND NHANVIEN.MANV = LUONG.MANV
GROUP BY PHONGBAN.TENPB
HAVING SUM(LUONG.PHUCAP) > 500000; --note


--20. Truy vấn số lượng nhân viên theo từng năm sinh:
SELECT YEAR(NGAYSINH) AS NAM_SINH, COUNT(*) AS SO_LUONG_NV
FROM NHANVIEN
GROUP BY YEAR(NGAYSINH);

--21. Truy vấn số lượng nhân viên theo năm sinh, chỉ lấy những năm có nhiều hơn 1 nhân viên:SELECT YEAR(NGAYSINH) AS NAM_SINH, COUNT(*) AS SO_LUONG_NV
SELECT YEAR(NGAYSINH) AS NAM_SINH, COUNT(*) AS SO_LUONG_NV
FROM NHANVIEN
GROUP BY YEAR(NGAYSINH)
HAVING COUNT(*) > 1; --note

--22. Truy vấn tổng lương (lương cơ bản + lương thưởng + phụ cấp) theo chức vụ, sắp xếp theo tổng lương giảm dần: 
SELECT CHUCVU.TENCV, 
       SUM(NHANVIEN.LUONGCB * NHANVIEN.HESOLUONG + LUONG.LUONGTHUONG + LUONG.PHUCAP) AS TONG_LUONG
FROM NHANVIEN
JOIN LUONG ON NHANVIEN.MANV = LUONG.MANV
JOIN CHUCVU ON NHANVIEN.MACV = CHUCVU.MACV
GROUP BY CHUCVU.TENCV
ORDER BY TONG_LUONG DESC;

--23. Truy vấn số lượng nhân viên và tổng lương cơ bản theo giới tính, chỉ lấy những nhóm có tổng lương cơ bản trên 15 triệu:
SELECT NHANVIEN.GIOITINH, 
       COUNT(NHANVIEN.MANV) AS SO_LUONG_NV, 
       SUM(NHANVIEN.LUONGCB) AS TONG_LUONG_CB
FROM NHANVIEN
GROUP BY NHANVIEN.GIOITINH
HAVING SUM(NHANVIEN.LUONGCB) > 15000000; --note

--24 Truy vấn tổng lương thưởng và phụ cấp của nhân viên trong mỗi phòng ban, chỉ lấy những phòng ban có tổng lương thưởng trên 1 triệu:
SELECT PHONGBAN.TENPB, 
       SUM(LUONG.LUONGTHUONG + LUONG.PHUCAP) AS TONG_LUONG_THUONG_PHUCAP
FROM NHANVIEN
JOIN LUONG ON NHANVIEN.MANV = LUONG.MANV
JOIN PHONGBAN ON NHANVIEN.MAPB = PHONGBAN.MAPB
GROUP BY PHONGBAN.TENPB
HAVING SUM(LUONG.LUONGTHUONG + LUONG.PHUCAP) > 1000000;

